package com.jagex;

import java.io.EOFException;
import java.io.IOException;

public class JS5CacheFile {

    static long aLong2577;

    static byte[] aByteArray2576 = new byte[520];

    UID192 aClass440_2573;

    UID192 aClass440_2574;

    int anInt2572 = 65000;

    int anInt2575;

    public JS5CacheFile(int i_1, UID192 class440_2, UID192 class440_3) {
        anInt2575 = i_1;
        aClass440_2573 = class440_2;
        aClass440_2574 = class440_3;
        anInt2572 = 1500000;
    }

    public static void record(MouseRecord class282_sub53_0) {
        if (!GameState.loggedIn(client.GAME_STATE)) {
            class282_sub53_0.cache();
        } else {
            Class236.aClass534_Sub2_2911.method11410(class282_sub53_0);
        }
    }

    public static RouteStrategy createWallObjectStrategy(int i_0, int i_1, int i_2, int i_3, ObjectType sceneobjecttype_4, int i_5) {
        RouteStrategies.WALL_OBJECT.approxDestinationX = i_0;
        RouteStrategies.WALL_OBJECT.approxDestinationY = i_1;
        RouteStrategies.WALL_OBJECT.approxDestinationSizeX = i_2;
        RouteStrategies.WALL_OBJECT.approxDestinationSizeY = i_3;
        RouteStrategies.WALL_OBJECT.objectType = sceneobjecttype_4;
        RouteStrategies.WALL_OBJECT.accessFlags = i_5;
        return RouteStrategies.WALL_OBJECT;
    }

    public static void method3359() {
        if (!Class190.aBool2383) {
            Class435.method7301(IndexLoaders.MAP_REGION_DECODER.getSceneObjectManager().aClass293ArrayArrayArray2610);
            if (IndexLoaders.MAP_REGION_DECODER.getSceneObjectManager().waterRelatedClassArray1 != null) {
                Class435.method7301(IndexLoaders.MAP_REGION_DECODER.getSceneObjectManager().waterRelatedClassArray1);
            }
            Class190.aBool2383 = true;
        }
    }

    public static boolean method3360() {
        return Class9.loginStage != 2;
    }

    public boolean method3348(int i_1, byte[] bytes_2, int i_3) {
        UID192 class440_5 = aClass440_2573;
        synchronized (aClass440_2573) {
            if (i_3 >= 0 && i_3 <= anInt2572) {
                boolean bool_6 = method3349(i_1, bytes_2, i_3, true);
                if (!bool_6) {
                    bool_6 = method3349(i_1, bytes_2, i_3, false);
                }
                return bool_6;
            } else {
                throw new IllegalArgumentException();
            }
        }
    }

    boolean method3349(int i_1, byte[] bytes_2, int i_3, boolean bool_4) {
        boolean bool_41 = bool_4;
        UID192 class440_6 = aClass440_2573;
        synchronized (aClass440_2573) {
            boolean bool_9;
            try {
                int i_8;
                boolean bool_10000;
                if (bool_41) {
                    if (aClass440_2574.method7345() < (i_1 * 6 + 6)) {
                        bool_9 = false;
                        bool_10000 = bool_9;
                        return bool_10000;
                    }
                    aClass440_2574.method7347(i_1 * 6);
                    aClass440_2574.method7350(aByteArray2576, 0, 6);
                    i_8 = (aByteArray2576[5] & 0xff) + ((aByteArray2576[3] & 0xff) << 16) + ((aByteArray2576[4] & 0xff) << 8);
                    if (i_8 <= 0 || i_8 > aClass440_2573.method7345() / 520L) {
                        bool_9 = false;
                        bool_10000 = bool_9;
                        return bool_10000;
                    }
                } else {
                    i_8 = (int) ((aClass440_2573.method7345() + 519L) / 520L);
                    if (i_8 == 0) {
                        i_8 = 1;
                    }
                }
                aByteArray2576[0] = (byte) (i_3 >> 16);
                aByteArray2576[1] = (byte) (i_3 >> 8);
                aByteArray2576[2] = (byte) i_3;
                aByteArray2576[3] = (byte) (i_8 >> 16);
                aByteArray2576[4] = (byte) (i_8 >> 8);
                aByteArray2576[5] = (byte) i_8;
                aClass440_2574.method7347(i_1 * 6);
                aClass440_2574.write(aByteArray2576, 0, 6);
                int i_22 = 0;
                int i_10 = 0;
                while (true) {
                    if (i_22 < i_3) {
                        label150:
                        {
                            int i_11 = 0;
                            int i_12;
                            if (bool_41) {
                                aClass440_2573.method7347(i_8 * 520);
                                int i_13;
                                int i_14;
                                if (i_1 > 65535) {
                                    try {
                                        aClass440_2573.method7350(aByteArray2576, 0, 10);
                                    } catch (EOFException eofexception_19) {
                                        break label150;
                                    }
                                    i_12 = ((aByteArray2576[1] & 0xff) << 16) + ((aByteArray2576[0] & 0xff) << 24) + (aByteArray2576[3] & 0xff) + ((aByteArray2576[2] & 0xff) << 8);
                                    i_13 = (aByteArray2576[5] & 0xff) + ((aByteArray2576[4] & 0xff) << 8);
                                    i_11 = (aByteArray2576[8] & 0xff) + ((aByteArray2576[7] & 0xff) << 8) + ((aByteArray2576[6] & 0xff) << 16);
                                    i_14 = aByteArray2576[9] & 0xff;
                                } else {
                                    try {
                                        aClass440_2573.method7350(aByteArray2576, 0, 8);
                                    } catch (EOFException eofexception_18) {
                                        break label150;
                                    }
                                    i_12 = (aByteArray2576[1] & 0xff) + ((aByteArray2576[0] & 0xff) << 8);
                                    i_13 = (aByteArray2576[3] & 0xff) + ((aByteArray2576[2] & 0xff) << 8);
                                    i_11 = ((aByteArray2576[5] & 0xff) << 8) + ((aByteArray2576[4] & 0xff) << 16) + (aByteArray2576[6] & 0xff);
                                    i_14 = aByteArray2576[7] & 0xff;
                                }
                                boolean bool_16;
                                if (i_12 != i_1 || i_13 != i_10 || i_14 != anInt2575) {
                                    bool_16 = false;
                                    bool_10000 = bool_16;
                                    return bool_10000;
                                }
                                if (i_11 < 0 || i_11 > aClass440_2573.method7345() / 520L) {
                                    bool_16 = false;
                                    bool_10000 = bool_16;
                                    return bool_10000;
                                }
                            }
                            if (i_11 == 0) {
                                bool_41 = false;
                                i_11 = (int) ((aClass440_2573.method7345() + 519L) / 520L);
                                if (i_11 == 0) {
                                    ++i_11;
                                }
                                if (i_8 == i_11) {
                                    ++i_11;
                                }
                            }
                            if (i_3 - i_22 <= 512) {
                                i_11 = 0;
                            }
                            if (i_1 > 65535) {
                                aByteArray2576[0] = (byte) (i_1 >> 24);
                                aByteArray2576[1] = (byte) (i_1 >> 16);
                                aByteArray2576[2] = (byte) (i_1 >> 8);
                                aByteArray2576[3] = (byte) i_1;
                                aByteArray2576[4] = (byte) (i_10 >> 8);
                                aByteArray2576[5] = (byte) i_10;
                                aByteArray2576[6] = (byte) (i_11 >> 16);
                                aByteArray2576[7] = (byte) (i_11 >> 8);
                                aByteArray2576[8] = (byte) i_11;
                                aByteArray2576[9] = (byte) anInt2575;
                                aClass440_2573.method7347(i_8 * 520);
                                aClass440_2573.write(aByteArray2576, 0, 10);
                                i_12 = i_3 - i_22;
                                if (i_12 > 510) {
                                    i_12 = 510;
                                }
                            } else {
                                aByteArray2576[0] = (byte) (i_1 >> 8);
                                aByteArray2576[1] = (byte) i_1;
                                aByteArray2576[2] = (byte) (i_10 >> 8);
                                aByteArray2576[3] = (byte) i_10;
                                aByteArray2576[4] = (byte) (i_11 >> 16);
                                aByteArray2576[5] = (byte) (i_11 >> 8);
                                aByteArray2576[6] = (byte) i_11;
                                aByteArray2576[7] = (byte) anInt2575;
                                aClass440_2573.method7347(i_8 * 520);
                                aClass440_2573.write(aByteArray2576, 0, 8);
                                i_12 = i_3 - i_22;
                                if (i_12 > 512) {
                                    i_12 = 512;
                                }
                            }
                            aClass440_2573.write(bytes_2, i_22, i_12);
                            i_22 += i_12;
                            i_8 = i_11;
                            ++i_10;
                            continue;
                        }
                    }
                    boolean bool_7 = true;
                    return bool_7;
                }
            } catch (IOException ioexception_20) {
                bool_9 = false;
                return bool_9;
            }
        }
    }

    public byte[] method3350(int id) {
        if(id == 4256) {
            id = id;
        }
        UID192 class440_3 = aClass440_2573;
        synchronized (aClass440_2573) {
            Object obj_10000;
            try {
                if (aClass440_2574.method7345() < (id * 6 + 6)) {
                    Object obj_5 = null;
                    obj_10000 = obj_5;
                    return (byte[]) obj_10000;
                }

//                if(id == 4256) {
//                    byte[] arrs = {16,-97,0,0,0,0,0,12,2,0,0,0,65,0,0,0,62,31,-117,8,0,0,0,0,0,0,0,99,96,-16,103,96,16,-80,103,-16,111,96,96,96,102,-4,-62,-64,-64,-64,8,18,1,2,75,-49,-52,76,6,-80,8,3,-93,14,3,-61,14,16,-125,-125,-127,9,44,7,33,25,24,1,-21,47,-45,-101,62,0,0,0,0,1,-20,0,42,96,-32,97,64,1,-116,0,70,65,-48,97,106,0,0,0,0,1,-98,19,121,84,-23,80,5,-125,113,25,100,-121,39,-51,-122,-85,44,-68,14,-12,-59,72,33,104,22,127,5,88,-68,109,-20,-3,-113,-106,123,14,-97,-93,-101,91,-118,9,93,-117,-39,99,79,-50,-29,122,107,-52,-24,22,41,-95,-24,1,73,26,100,113,54,-12,61,35,31,67,-54,93,-20,25,15,106,-87,65,-35,-2,11,109,-71,-35,-80,117,-27,100,67,-89,23,-104,-52,-53,-37,-77,-22,-89,32,76,-18,0,-33,15,81,-105,58,48,-108,26,-23,23,-74,-11,-82,121,-11,0,0,0,0,1,-123,-82,-83,-23,-30,50,-43,118,-22,52,-34,100,95,-44,-34,71,51,-109,-95,73,-73,78,-54,122,1,81,-16,-94,83,89,2,0,0,0,1,34,-116,-100,-105,38,63,-28,13,11,31,19,-2,-44,66,-61,4,35,-26,-27,-25,-37,-81,127,-51,-71,-104,-54,53,-81,-122,-58,-99,80,-34,-30,69,106,-14,43,85,-59,-22,57,92,-59,104,53,52,104,-64,3,74,-70,-105,-94,28,124,33,-12,-47,-96,37,6,100,-16,1,-30,109,-25,-27,67,-108,-12,76,-119,5,77,11,53,-14,21,65,66,0,72,-47,-91,-49,21,-62,-61,125,58,-70,67,-89,64,-109,36,-32,9,125,6,-109,79,110,-84,98,11,54,68,55,31,-83,-81,-33,-18,63,94,-66,-69,-39,7,57,0,-122,56,48,-60,125,35,63,-67,109,-95,73,-27,30,-107,6,-47,-83,-115,-5,-55,-122,9,-128,98,-27,-60,107,36,84,-89,16,-91,121,-22,-12,5,-123,-95,126,-111,-22,-117,-104,36,9,-120,61,72,-63,15,6,-123,42,-114,67,-76,124,94,-33,-43,75,119,-6,-105,65,-50,-29,-95,-12,38,119,34,29,10,76,39,-60,-110,-67,-45,-10,51,-75,-7,109,6,103,-119,-35,-8,-32,-83,-12,1,43,17,72,37,-71,32,-81,108,-99,-90,-62,-121,-41,18,-128,3,94,-28,-21,-30,-27,112,-35,-27,102,-112,102,-65,33,70,58,-40,-77,-110,9,-102,-128,74,-93,4,23,24};
//                    for(int i = 0; i < arrs.length; i++) {
//                        if(arrs[i] != aByteArray2576[i]) {
////                                        System.out.println(i + " is unequal");
//                            aByteArray2576[i] = arrs[i];
//                        }
//                    }
//                    id = id;
//                }

                aClass440_2574.method7347(id * 6);




                aClass440_2574.method7350(aByteArray2576, 0, 6);
                if(id == 787 || id == 4256) {
                    id = id;

                }



//                if(id == 4256) {
//                    byte[] arrs = {16,-97,0,0,0,0,0,12,2,0,0,0,65,0,0,0,62,31,-117,8,0,0,0,0,0,0,0,99,96,-16,103,96,16,-80,103,-16,111,96,96,96,102,-4,-62,-64,-64,-64,8,18,1,2,75,-49,-52,76,6,-80,8,3,-93,14,3,-61,14,16,-125,-125,-127,9,44,7,33,25,24,1,-21,47,-45,-101,62,0,0,0,0,1,-20,0,42,96,-32,97,64,1,-116,0,70,65,-48,97,106,0,0,0,0,1,-98,19,121,84,-23,80,5,-125,113,25,100,-121,39,-51,-122,-85,44,-68,14,-12,-59,72,33,104,22,127,5,88,-68,109,-20,-3,-113,-106,123,14,-97,-93,-101,91,-118,9,93,-117,-39,99,79,-50,-29,122,107,-52,-24,22,41,-95,-24,1,73,26,100,113,54,-12,61,35,31,67,-54,93,-20,25,15,106,-87,65,-35,-2,11,109,-71,-35,-80,117,-27,100,67,-89,23,-104,-52,-53,-37,-77,-22,-89,32,76,-18,0,-33,15,81,-105,58,48,-108,26,-23,23,-74,-11,-82,121,-11,0,0,0,0,1,-123,-82,-83,-23,-30,50,-43,118,-22,52,-34,100,95,-44,-34,71,51,-109,-95,73,-73,78,-54,122,1,81,-16,-94,83,89,2,0,0,0,1,34,-116,-100,-105,38,63,-28,13,11,31,19,-2,-44,66,-61,4,35,-26,-27,-25,-37,-81,127,-51,-71,-104,-54,53,-81,-122,-58,-99,80,-34,-30,69,106,-14,43,85,-59,-22,57,92,-59,104,53,52,104,-64,3,74,-70,-105,-94,28,124,33,-12,-47,-96,37,6,100,-16,1,-30,109,-25,-27,67,-108,-12,76,-119,5,77,11,53,-14,21,65,66,0,72,-47,-91,-49,21,-62,-61,125,58,-70,67,-89,64,-109,36,-32,9,125,6,-109,79,110,-84,98,11,54,68,55,31,-83,-81,-33,-18,63,94,-66,-69,-39,7,57,0,-122,56,48,-60,125,35,63,-67,109,-95,73,-27,30,-107,6,-47,-83,-115,-5,-55,-122,9,-128,98,-27,-60,107,36,84,-89,16,-91,121,-22,-12,5,-123,-95,126,-111,-22,-117,-104,36,9,-120,61,72,-63,15,6,-123,42,-114,67,-76,124,94,-33,-43,75,119,-6,-105,65,-50,-29,-95,-12,38,119,34,29,10,76,39,-60,-110,-67,-45,-10,51,-75,-7,109,6,103,-119,-35,-8,-32,-83,-12,1,43,17,72,37,-71,32,-81,108,-99,-90,-62,-121,-41,18,-128,3,94,-28,-21,-30,-27,112,-35,-27,102,-112,102,-65,33,70,58,-40,-77,-110,9,-102,-128,74,-93,4,23,24};
//                    for(int i = 0; i < arrs.length; i++) {
//                        if(arrs[i] != aByteArray2576[i]) {
//                            System.out.println(i + " is unequal");
////                            aByteArray2576[i] = arrs[i];
//                        }
//                    }
//                    id = id;
//                }

//                if(id == 4256) {
//                    aByteArray2576[4] = -63;
//                    aByteArray2576[5] = -39;
//                    byte[] arrs = {0,0,47,0,-63,-39,0,12,2,0,0,0,65,0,0,0,62,31,-117,8,0,0,0,0,0,0,0,99,96,-16,103,96,16,-80,103,-16,111,96,96,96,102,-4,-62,-64,-64,-64,8,18,1,2,75,-49,-52,76,6,-80,8,3,-93,14,3,-61,14,16,-125,-125,-127,9,44,7,33,25,24,1,-21,47,-45,-101,62,0,0,0,0,1,-20,0,42,96,-32,97,64,1,-116,0,70,65,-48,97,106,0,0,0,0,1,-98,19,121,84,-23,80,5,-125,113,25,100,-121,39,-51,-122,-85,44,-68,14,-12,-59,72,33,104,22,127,5,88,-68,109,-20,-3,-113,-106,123,14,-97,-93,-101,91,-118,9,93,-117,-39,99,79,-50,-29,122,107,-52,-24,22,41,-95,-24,1,73,26,100,113,54,-12,61,35,31,67,-54,93,-20,25,15,106,-87,65,-35,-2,11,109,-71,-35,-80,117,-27,100,67,-89,23,-104,-52,-53,-37,-77,-22,-89,32,76,-18,0,-33,15,81,-105,58,48,-108,26,-23,23,-74,-11,-82,121,-11,0,0,0,0,1,-123,-82,-83,-23,-30,50,-43,118,-22,52,-34,100,95,-44,-34,71,51,-109,-95,73,-73,78,-54,122,1,81,-16,-94,83,89,2,0,0,0,1,34,-116,-100,-105,38,63,-28,13,11,31,19,-2,-44,66,-61,4,35,-26,-27,-25,-37,-81,127,-51,-71,-104,-54,53,-81,-122,-58,-99,80,-34,-30,69,106,-14,43,85,-59,-22,57,92,-59,104,53,52,104,-64,3,74,-70,-105,-94,28,124,33,-12,-47,-96,37,6,100,-16,1,-30,109,-25,-27,67,-108,-12,76,-119,5,77,11,53,-14,21,65,66,0,72,-47,-91,-49,21,-62,-61,125,58,-70,67,-89,64,-109,36,-32,9,125,6,-109,79,110,-84,98,11,54,68,55,31,-83,-81,-33,-18,63,94,-66,-69,-39,7,57,0,-122,56,48,-60,125,35,63,-67,109,-95,73,-27,30,-107,6,-47,-83,-115,-5,-55,-122,9,-128,98,-27,-60,107,36,84,-89,16,-91,121,-22,-12,5,-123,-95,126,-111,-22,-117,-104,36,9,-120,61,72,-63,15,6,-123,42,-114,67,-76,124,94,-33,-43,75,119,-6,-105,65,-50,-29,-95,-12,38,119,34,29,10,76,39,-60,-110,-67,-45,-10,51,-75,-7,109,6,103,-119,-35,-8,-32,-83,-12,1,43,17,72,37,-71,32,-81,108,-99,-90,-62,-121,-41,18,-128,3,94,-28,-21,-30,-27,112,-35,-27,102,-112,102,-65,33,70,58,-40,-77,-110,9,-102,-128,74,-93,4,23,24};
//                    for(int i = 0; i < arrs.length; i++) {
//                        if(arrs[i] != aByteArray2576[i]) {
//                            System.out.println(i + " is unequal");
//                        }
//                    }
//                    id = id;
//                }
                int length = ((aByteArray2576[0] & 0xff) << 16) + (aByteArray2576[2] & 0xff) + ((aByteArray2576[1] & 0xff) << 8);
                int i_6 = (aByteArray2576[5] & 0xff) + ((aByteArray2576[3] & 0xff) << 16) + ((aByteArray2576[4] & 0xff) << 8);
                Object obj_7;
                if (length < 0 || length > anInt2572) {
                    obj_7 = null;
                    obj_10000 = obj_7;
                    return (byte[]) obj_10000;
                }
                if (i_6 > 0 && i_6 <= aClass440_2573.method7345() / 520L) {
                    byte[] bytes_24 = new byte[length];
                    int i_8 = 0;
                    int i_9 = 0;
                    while (i_8 < length) {
                        if (i_6 == 0) {
                            Object obj_10 = null;
                            obj_10000 = obj_10;
                            return (byte[]) obj_10000;
                        }
                        aClass440_2573.method7347(i_6 * 520);
                        int i_19 = length - i_8;
                        byte b_11;
                        int i_12;
                        int i_13;
                        int i_14;
                        int i_15;
                        if (id > 65535) {
                            if (i_19 > 510) {
                                i_19 = 510;
                            }
                            b_11 = 10;
                            aClass440_2573.method7350(aByteArray2576, 0, b_11 + i_19);
                            i_12 = ((aByteArray2576[1] & 0xff) << 16) + ((aByteArray2576[0] & 0xff) << 24) + (aByteArray2576[3] & 0xff) + ((aByteArray2576[2] & 0xff) << 8);
                            i_13 = (aByteArray2576[5] & 0xff) + ((aByteArray2576[4] & 0xff) << 8);
                            i_14 = (aByteArray2576[8] & 0xff) + ((aByteArray2576[7] & 0xff) << 8) + ((aByteArray2576[6] & 0xff) << 16);
                            i_15 = aByteArray2576[9] & 0xff;
                        } else {
                            if (i_19 > 512) {
                                i_19 = 512;
                            }
                            b_11 = 8;
                            aClass440_2573.method7350(aByteArray2576, 0, b_11 + i_19);

                            if(id == 4256) {
                                byte[] arrs = {16,-96,0,0,0,0,0,12,2,0,0,0,36,0,0,0,26,31,-117,8,0,0,0,0,0,0,0,99,96,-40,-63,0,66,12,12,76,12,-116,32,10,74,50,48,2,0,93,-95,-118,-37,26,0,0,0,0,1,-80,8,3,-93,14,3,-61,14,16,-125,-125,-127,9,44,7,33,25,24,1,-21,47,-45,-101,62,0,0,0,0,1,-20,0,42,96,-32,97,64,1,-116,0,70,65,-48,97,106,0,0,0,0,1,-98,19,121,84,-23,80,5,-125,113,25,100,-121,39,-51,-122,-85,44,-68,14,-12,-59,72,33,104,22,127,5,88,-68,109,-20,-3,-113,-106,123,14,-97,-93,-101,91,-118,9,93,-117,-39,99,79,-50,-29,122,107,-52,-24,22,41,-95,-24,1,73,26,100,113,54,-12,61,35,31,67,-54,93,-20,25,15,106,-87,65,-35,-2,11,109,-71,-35,-80,117,-27,100,67,-89,23,-104,-52,-53,-37,-77,-22,-89,32,76,-18,0,-33,15,81,-105,58,48,-108,26,-23,23,-74,-11,-82,121,-11,0,0,0,0,1,-123,-82,-83,-23,-30,50,-43,118,-22,52,-34,100,95,-44,-34,71,51,-109,-95,73,-73,78,-54,122,1,81,-16,-94,83,89,2,0,0,0,1,34,-116,-100,-105,38,63,-28,13,11,31,19,-2,-44,66,-61,4,35,-26,-27,-25,-37,-81,127,-51,-71,-104,-54,53,-81,-122,-58,-99,80,-34,-30,69,106,-14,43,85,-59,-22,57,92,-59,104,53,52,104,-64,3,74,-70,-105,-94,28,124,33,-12,-47,-96,37,6,100,-16,1,-30,109,-25,-27,67,-108,-12,76,-119,5,77,11,53,-14,21,65,66,0,72,-47,-91,-49,21,-62,-61,125,58,-70,67,-89,64,-109,36,-32,9,125,6,-109,79,110,-84,98,11,54,68,55,31,-83,-81,-33,-18,63,94,-66,-69,-39,7,57,0,-122,56,48,-60,125,35,63,-67,109,-95,73,-27,30,-107,6,-47,-83,-115,-5,-55,-122,9,-128,98,-27,-60,107,36,84,-89,16,-91,121,-22,-12,5,-123,-95,126,-111,-22,-117,-104,36,9,-120,61,72,-63,15,6,-123,42,-114,67,-76,124,94,-33,-43,75,119,-6,-105,65,-50,-29,-95,-12,38,119,34,29,10,76,39,-60,-110,-67,-45,-10,51,-75,-7,109,6,103,-119,-35,-8,-32,-83,-12,1,43,17,72,37,-71,32,-81,108,-99,-90,-62,-121,-41,18,-128,3,94,-28,-21,-30,-27,112,-35,-27,102,-112,102,-65,33,70,58,-40,-77,-110,9,-102,-128,74,-93,4,23,24};
                                for(int i = 0; i < arrs.length; i++) {
                                    if(arrs[i] != aByteArray2576[i]) {
//                                        System.out.println(i + " is unequal");
                                        aByteArray2576[i] = arrs[i];
                                    }
                                }
                                id = id;
                            }

                            i_12 = (aByteArray2576[1] & 0xff) + ((aByteArray2576[0] & 0xff) << 8);
                            i_13 = (aByteArray2576[3] & 0xff) + ((aByteArray2576[2] & 0xff) << 8);
                            i_14 = ((aByteArray2576[5] & 0xff) << 8) + ((aByteArray2576[4] & 0xff) << 16) + (aByteArray2576[6] & 0xff);
                            i_15 = aByteArray2576[7] & 0xff;
                        }
                        Object obj_16;
                        if (i_12 == id && i_13 == i_9 && i_15 == anInt2575) {
                            if (i_14 >= 0 && i_14 <= aClass440_2573.method7345() / 520L) {
                                int i_20 = i_19 + b_11;
                                for (int i = b_11; i < i_20; i++) {
                                    bytes_24[i_8++] = aByteArray2576[i];
                                }
                                if(id == 4526) {
                                    id = id;
                                }
                                i_6 = i_14;
                                ++i_9;
                                continue;
                            }
                            obj_16 = null;
                            obj_10000 = obj_16;
                            return (byte[]) obj_10000;
                        }
                        obj_16 = null;
                        obj_10000 = obj_16;
                        return (byte[]) obj_10000;
                    }

                    byte[] bytes_4 = bytes_24;
//
//                    if(id==787) {
//                       byte[] arrs = {3,0,0,1,110,0,0,5,-60,31,-117,8,0,0,0,0,0,0,0,-75,-108,-53,113,-125,48,16,-122,121,56,-109,91,-58,103,-97,40,32,7,29,124,-16,-127,-125,14,46,64,37,108,9,42,33,37,80,2,51,105,-128,6,98,-3,-92,0,80,9,46,-127,123,-100,-57,98,-124,-111,13,-60,-103,36,-106,45,91,-69,-97,86,-5,105,-104,33,-116,-98,87,-31,13,103,-48,-115,40,8,-7,55,60,126,-122,-1,107,-92,-113,61,114,-4,70,-89,-4,-104,4,30,-69,90,115,50,-8,13,-119,102,72,-4,13,-119,103,-84,127,66,46,-17,51,81,51,-33,-25,-33,72,23,-51,-110,73,55,71,-62,-15,125,-38,40,24,-111,-66,102,-34,-32,-72,-104,34,41,-127,74,89,103,117,110,-124,121,-38,40,72,100,117,-63,17,-119,53,-23,-92,-74,-75,93,42,82,66,64,86,-5,-60,10,43,65,-48,-112,-12,8,85,-19,43,-96,-88,27,-28,0,26,-34,-92,-56,34,-79,-38,10,100,-56,-42,68,101,1,-37,-98,-112,-24,-115,26,78,46,76,-58,93,-43,89,95,50,5,-41,-8,-67,-115,34,-20,61,1,-56,93,3,89,46,47,45,-12,78,67,-107,52,114,65,-15,-110,-47,-85,-12,-123,92,-54,-77,114,-103,51,-75,62,-25,-21,93,-18,99,93,1,-75,-19,79,116,-102,-122,20,-14,-19,-48,-5,-92,106,-106,44,-37,108,33,83,22,-18,-39,-32,-69,99,-29,82,82,58,-106,-26,-62,12,-51,72,-36,-112,70,-98,78,-40,-77,63,20,63,-38,69,112,-37,-79,-70,-66,-27,79,-29,-31,-77,27,-17,-68,-66,-25,25,-13,-6,-32,-30,-18,-107,-59,-109,-29,15,-57,23,-68,126,-13,120,-32,106,90,126,-41,78,-57,15,109,62,-2,2,125,26,8,-32,-60,5,0,0,0,2};
//                        for(int i = 0; i < arrs.length; i++) {
//                            if(arrs[i] != bytes_4[i]) {
////                                System.out.println(i + " is unequal");
//                            }
//                        }
//                        id = id;
//                    }

                    if(id == 4256) {
                        byte[] arrs = {2,0,0,0,36,0,0,0,26,31,-117,8,0,0,0,0,0,0,0,99,96,-40,-63,0,66,12,12,76,12,-116,32,10,74,50,48,2,0,93,-95,-118,-37,26,0,0,0,0,1};
//                        System.out.println(bytes_4.length + " " + arrs.length);
                        for(int i = 0; i < arrs.length; i++) {
                            if(arrs[i] != bytes_4[i]) {
//                                System.out.println(i + " is unequal");
                            }
                        }
                        id = id;
                    }


                    return bytes_4;
                }
                obj_7 = null;
                obj_10000 = obj_7;

//                if(id == 4256) {
//                    byte[] arrs = {16,-96,0,0,0,0,0,12,2,0,0,0,36,0,0,0,26,31,-117,8,0,0,0,0,0,0,0,99,96,-40,-63,0,66,12,12,76,12,-116,32,10,74,50,48,2,0,93,-95,-118,-37,26,0,0,0,0,1,-80,8,3,-93,14,3,-61,14,16,-125,-125,-127,9,44,7,33,25,24,1,-21,47,-45,-101,62,0,0,0,0,1,-20,0,42,96,-32,97,64,1,-116,0,70,65,-48,97,106,0,0,0,0,1,-98,19,121,84,-23,80,5,-125,113,25,100,-121,39,-51,-122,-85,44,-68,14,-12,-59,72,33,104,22,127,5,88,-68,109,-20,-3,-113,-106,123,14,-97,-93,-101,91,-118,9,93,-117,-39,99,79,-50,-29,122,107,-52,-24,22,41,-95,-24,1,73,26,100,113,54,-12,61,35,31,67,-54,93,-20,25,15,106,-87,65,-35,-2,11,109,-71,-35,-80,117,-27,100,67,-89,23,-104,-52,-53,-37,-77,-22,-89,32,76,-18,0,-33,15,81,-105,58,48,-108,26,-23,23,-74,-11,-82,121,-11,0,0,0,0,1,-123,-82,-83,-23,-30,50,-43,118,-22,52,-34,100,95,-44,-34,71,51,-109,-95,73,-73,78,-54,122,1,81,-16,-94,83,89,2,0,0,0,1,34,-116,-100,-105,38,63,-28,13,11,31,19,-2,-44,66,-61,4,35,-26,-27,-25,-37,-81,127,-51,-71,-104,-54,53,-81,-122,-58,-99,80,-34,-30,69,106,-14,43,85,-59,-22,57,92,-59,104,53,52,104,-64,3,74,-70,-105,-94,28,124,33,-12,-47,-96,37,6,100,-16,1,-30,109,-25,-27,67,-108,-12,76,-119,5,77,11,53,-14,21,65,66,0,72,-47,-91,-49,21,-62,-61,125,58,-70,67,-89,64,-109,36,-32,9,125,6,-109,79,110,-84,98,11,54,68,55,31,-83,-81,-33,-18,63,94,-66,-69,-39,7,57,0,-122,56,48,-60,125,35,63,-67,109,-95,73,-27,30,-107,6,-47,-83,-115,-5,-55,-122,9,-128,98,-27,-60,107,36,84,-89,16,-91,121,-22,-12,5,-123,-95,126,-111,-22,-117,-104,36,9,-120,61,72,-63,15,6,-123,42,-114,67,-76,124,94,-33,-43,75,119,-6,-105,65,-50,-29,-95,-12,38,119,34,29,10,76,39,-60,-110,-67,-45,-10,51,-75,-7,109,6,103,-119,-35,-8,-32,-83,-12,1,43,17,72,37,-71,32,-81,108,-99,-90,-62,-121,-41,18,-128,3,94,-28,-21,-30,-27,112,-35,-27,102,-112,102,-65,33,70,58,-40,-77,-110,9,-102,-128,74,-93,4,23,24};
//                    for(int i = 0; i < arrs.length; i++) {
//                        if(arrs[i] != is[i]) {
////                                        System.out.println(i + " is unequal");
//                            aByteArray2576[i] = arrs[i];
//                        }
//                    }
//                    id = id;
//                }
//                2,0,0,0,36,0,0,0,26,31,-117,8,0,0,0,0,0,0,0,99,96,-40,-63,0,66,12,12,76,12,-116,32,10,74,50,48,2,0,93,-95,-118,-37,26,0,0,0,0,1,

            } catch (IOException ioexception_22) {
                Object obj_21 = null;
                return (byte[]) obj_21;
            }
            return (byte[]) obj_10000;
        }
    }

    public String toString() {
        return "" + anInt2575;
    }
}
